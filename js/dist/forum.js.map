{"version":3,"sources":["webpack://@itlad/synopsis/webpack/bootstrap","webpack://@itlad/synopsis/external \"flarum.core.compat['app']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['extend']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['utils/string']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['components/Switch']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['utils/Stream']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['states/DiscussionListState']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['components/FieldSet']\"","webpack://@itlad/synopsis/external \"flarum.core.compat['utils/ItemList']\"","webpack://@itlad/synopsis/./src/forum/index.js","webpack://@itlad/synopsis/./src/forum/addSummaryExcerpt.js","webpack://@itlad/synopsis/./src/forum/addUserPreference.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","exports","flarum","core","compat","app","initializers","add","extend","DiscussionListState","params","include","push","DiscussionListItem","items","discussion","this","attrs","session","user","preferences","showSynopsisExcerpts","excerptPost","forum","attribute","firstPost","lastPost","excerptLength","excerptImageEable","excerptImageLength","richExcerpt","onMobile","showSynopsisExcerptsOnMobile","excerpt","m","trust","truncate","contentHtml","contentPlain","images","match","length","slice","excerptImages","className","map","img","src","SettingsPage","Stream","FieldSet","component","label","translator","trans","summariesItems","toArray","ItemList","Switch","state","onchange","showSynopsisExcerptsLoading","savePreferences","then","redraw","loading","disabled","showSynopsisExcerptsOnMobileLoading","window","location","reload"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['utils/string'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['states/DiscussionListState'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/FieldSet'];","module.exports = flarum.core.compat['utils/ItemList'];","/* This is part of the itlad/synopsis project.\n * \n * Additional modifications (c)2021 itlad\n * \n * Additional modifications (c)2020 Ian Morland\n *\n * Modified code (c)2019 Jordan Schnaidt\n *\n * Original code (c) Toby Zerner <toby.zerner@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/app';\n\nimport addSummaryExcerpt from './addSummaryExcerpt';\nimport addUserPreference from './addUserPreference';\n\napp.initializers.add('itlad-synopsis', () => {\n    addSummaryExcerpt();\n    addUserPreference();\n});\n","/* This is part of the itlad/synopsis project.\n * \n * Additional modifications (c)2021 itlad\n * \n * Additional modifications (c)2020 Ian Morland\n *\n * Modified code (c)2019 Jordan Schnaidt\n *\n * Original code (c) Toby Zerner <toby.zerner@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionListState from 'flarum/states/DiscussionListState';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\nimport { truncate } from 'flarum/utils/string';\n\nexport default function addSummaryExcerpt() {\n    extend(DiscussionListState.prototype, 'requestParams', function (params) {\n        params.include.push(['firstPost', 'lastPost']);\n    });\n\n    extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n        const discussion = this.attrs.discussion;\n\n        if (app.session.user && !app.session.user.preferences().showSynopsisExcerpts) {\n            return;\n        }\n\n        const excerptPost = app.forum.attribute('synopsis.excerpt_type') === 'first' ? discussion.firstPost() : discussion.lastPost();\n        const excerptLength = app.forum.attribute('synopsis.excerpt_length');\n        const excerptImageEable = app.forum.attribute('synopsis.images-excerpt_enable');\n        const excerptImageLength = app.forum.attribute('synopsis.images-excerpt_length');\n        const richExcerpt = app.forum.attribute('synopsis.rich_excerpts');\n        const onMobile = app.session.user ? app.session.user.preferences().showSynopsisExcerptsOnMobile : false;\n\n        if (excerptPost) {\n            const excerpt = (\n                <div>\n                    {richExcerpt ? m.trust(truncate(excerptPost.contentHtml(), excerptLength)) : truncate(excerptPost.contentPlain(), excerptLength)}\n                </div>\n            );\n            items.add(onMobile ? 'excerptM' : 'excerpt', excerpt, -100);\n\n            if (excerptImageEable) {\n                let contentHtml = excerptPost.contentHtml()\n                if (contentHtml) {\n                    let images = contentHtml.match(/<img.*?(?:>|\\/>)/gi);\n                    images = images.length > excerptImageLength ? images.slice(0, excerptImageLength) : images;\n                    const excerptImages = (\n                        <ul className=\"excerpt-image\">\n                            {images.map(img => (\n                                <li>\n                                    <img src={img.match(/src=[\\'\\\"]?([^\\'\\\"]*)[\\'\\\"]?/i)[1]} />\n                                </li>\n                            ))}\n                        </ul>\n                    );\n                    items.add(onMobile ? 'excerptImages' : 'excerptImagesM', excerptImages, -100);\n                }\n            }\n        }\n    });\n}\n","/* This is part of the itlad/synopsis project.\n * \n * Additional modifications (c)2021 itlad\n * \n * Additional modifications (c)2020 Ian Morland\n *\n * Modified code (c)2019 Jordan Schnaidt\n *\n * Original code (c) Toby Zerner <toby.zerner@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extend } from 'flarum/extend';\nimport SettingsPage from 'flarum/components/SettingsPage';\nimport FieldSet from 'flarum/components/FieldSet';\nimport ItemList from 'flarum/utils/ItemList';\nimport Switch from 'flarum/components/Switch';\nimport Stream from 'flarum/utils/Stream';\n\nexport default function () {\n    extend(SettingsPage.prototype, 'oninit', function () {\n        this.showSynopsisExcerpts = Stream(this.user.preferences().showSynopsisExcerpts);\n        this.showSynopsisExcerptsOnMobile = Stream(this.user.preferences().showSynopsisExcerptsOnMobile);\n    });\n\n    extend(SettingsPage.prototype, 'settingsItems', function (items) {\n        items.add(\n            'synopsis',\n            FieldSet.component(\n                {\n                    label: app.translator.trans('itlad-synopsis.forum.user.settings.summaries-heading'),\n                    className: 'Settings-Synopsis',\n                },\n                this.summariesItems().toArray()\n            )\n        );\n    });\n\n    SettingsPage.prototype['summariesItems'] = function () {\n        const items = new ItemList();\n\n        items.add(\n            'synopsis-excerpts',\n            Switch.component(\n                {\n                    state: this.user.preferences().showSynopsisExcerpts,\n                    onchange: (value) => {\n                        this.showSynopsisExcerptsLoading = true;\n\n                        this.user.savePreferences({ showSynopsisExcerpts: value }).then(() => {\n                            this.showSynopsisExcerptsLoading = false;\n                            m.redraw();\n                        });\n                    },\n                    loading: this.showSynopsisExcerptsLoading,\n                },\n                app.translator.trans('itlad-synopsis.forum.user.settings.show-summaries')\n            )\n        );\n\n        if (this.user.preferences().showSynopsisExcerpts) {\n            items.add(\n                'synopsis-excerpts-mobile',\n                Switch.component(\n                    {\n                        state: this.user.preferences().showSynopsisExcerptsOnMobile,\n                        disabled: !this.user.preferences().showSynopsisExcerpts,\n                        onchange: (value) => {\n                            this.showSynopsisExcerptsOnMobileLoading = true;\n\n                            this.user.savePreferences({ showSynopsisExcerptsOnMobile: value }).then(() => {\n                                this.showSynopsisExcerptsOnMobileLoading = false;\n                                window.location.reload();\n                            });\n                        },\n                        loading: this.showSynopsisExcerptsOnMobileLoading,\n                    },\n                    app.translator.trans('itlad-synopsis.forum.user.settings.show-summaries-mobile')\n                )\n            );\n        }\n\n        return items;\n    };\n}\n"],"sourceRoot":""}